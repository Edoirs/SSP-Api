// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SelfPortalAPi.Models;

#nullable disable

namespace SelfPortalAPi.Migrations.SelfServiceConnectMigrations
{
    [DbContext(typeof(SelfServiceConnect))]
    [Migration("20240817153242_SelfService")]
    partial class SelfService
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SelfPortalAPi.Models.AddPayeInputFile", b =>
                {
                    b.Property<string>("CompanyRin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.HasKey("CompanyRin", "BusinessRin", "TaxYear")
                        .HasName("Input_pk");

                    b.ToTable("AddPayeInputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AdminUser", b =>
                {
                    b.Property<int>("AdminUserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdminUserId"));

                    b.Property<string>("AdminUserTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("CreateddDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint")
                        .HasDefaultValue((byte)1);

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int>("PayeUserTypeId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.HasKey("AdminUserId");

                    b.ToTable("AdminUser", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AnnualReturn", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("business_address");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("business_id");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("business_name");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_name");

                    b.Property<int>("CorporateId")
                        .HasColumnType("int")
                        .HasColumnName("corporate_id");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("EmployeesCount")
                        .HasColumnType("int")
                        .HasColumnName("employees_count");

                    b.Property<string>("IndustrySectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("industry_sector_name");

                    b.Property<string>("IndustrySubsectorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("industry_subsector_name");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LgaName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lga_name");

                    b.Property<string>("LinkStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("link_status");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("TaxpayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxpayer_id");

                    b.Property<string>("TaxpayerRole")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxpayer_role");

                    b.Property<string>("TownName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("town_name");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WardName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ward_name");

                    b.HasKey("Id");

                    b.ToTable("AnnualReturns");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Assessment", b =>
                {
                    b.Property<long>("AssessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("assess_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("AssessId"));

                    b.Property<DateTime>("AssessCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_create_by");

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssessmentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("AssessmentRule")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("assessment_rule");

                    b.Property<int?>("AssessmentStatus")
                        .HasColumnType("int");

                    b.Property<int>("AssetRin")
                        .HasColumnType("int")
                        .HasColumnName("asset_rin");

                    b.Property<int>("AssetType")
                        .HasColumnType("int")
                        .HasColumnName("asset_type");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_tin");

                    b.Property<int>("ProfileRef")
                        .HasColumnType("int")
                        .HasColumnName("profile_ref");

                    b.Property<int>("RuleCode")
                        .HasColumnType("int")
                        .HasColumnName("rule_code");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<DateTime>("SettlementDueDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_due_date");

                    b.Property<string>("SettlementStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasDefaultValue("DUE")
                        .HasColumnName("settlement_status");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tax_payer_rin");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.HasKey("AssessId");

                    b.ToTable("Assessments");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssessmentItemApi", b =>
                {
                    b.Property<int?>("AgencyId")
                        .HasColumnType("int")
                        .HasColumnName("AgencyID");

                    b.Property<string>("AgencyName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentGroupID");

                    b.Property<string>("AssessmentGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemCategoryID");

                    b.Property<string>("AssessmentItemCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentItemReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssessmentItemSubCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemSubCategoryID");

                    b.Property<string>("AssessmentItemSubCategoryName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentSubGroupId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentSubGroupID");

                    b.Property<string>("AssessmentSubGroupName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ComputationId")
                        .HasColumnType("int")
                        .HasColumnName("ComputationID");

                    b.Property<string>("ComputationName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Id")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("id");

                    b.Property<string>("Percentage")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProfileDescription")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueStreamID");

                    b.Property<string>("RevenueStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("RevenueSubStreamId")
                        .HasColumnType("int")
                        .HasColumnName("RevenueSubStreamID");

                    b.Property<string>("RevenueSubStreamName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TaxAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasIndex(new[] { "AssetRin", "AssessmentRuleCode" }, "Ind_Assessment_Item_API");

                    b.ToTable("Assessment_Item_API", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssessmentRule", b =>
                {
                    b.Property<int>("AssessRulesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("assess_rules_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssessRulesId"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AssessRulesCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("assess_rules_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("AssessRulesCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("assess_rules_create_by");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("assessment_items");

                    b.Property<long>("AssessmentRuleId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("assessment_rule_name");

                    b.Property<DateTime>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("Frequency")
                        .HasColumnType("int")
                        .HasColumnName("frequency");

                    b.Property<int?>("PaymentOptions")
                        .HasColumnType("int")
                        .HasColumnName("payment_options");

                    b.Property<int?>("Profile")
                        .HasColumnType("int")
                        .HasColumnName("profile");

                    b.Property<string>("RuleCode")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("rule_code");

                    b.Property<int?>("RuleRun")
                        .HasColumnType("int")
                        .HasColumnName("rule_run");

                    b.Property<string>("SettlementMethods")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("settlement_methods");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.HasKey("AssessRulesId");

                    b.ToTable("Assessment_Rules", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssessmentRule1", b =>
                {
                    b.Property<double?>("Active")
                        .HasColumnType("float");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("AssessmentRuleId")
                        .HasColumnType("float")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("PaymentFrequencyId")
                        .HasColumnType("float")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<double?>("PaymentOptionId")
                        .HasColumnType("float")
                        .HasColumnName("PaymentOptionID");

                    b.Property<double?>("ProfileId")
                        .HasColumnType("float")
                        .HasColumnName("ProfileID");

                    b.Property<double?>("RuleRunId")
                        .HasColumnType("float")
                        .HasColumnName("RuleRunID");

                    b.Property<double?>("TaxMonth")
                        .HasColumnType("float");

                    b.Property<double?>("TaxYear")
                        .HasColumnType("float");

                    b.ToTable("AssessmentRules", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssessmentRuleMasterApi", b =>
                {
                    b.Property<int?>("Active")
                        .HasColumnType("int");

                    b.Property<int?>("AssessmentAmount")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(15)
                        .HasColumnType("nchar(15)")
                        .IsFixedLength();

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength();

                    b.Property<int?>("PaymentFrequencyId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<int?>("PaymentOptionId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentOptionID");

                    b.Property<string>("ProfileId")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("ProfileID")
                        .IsFixedLength();

                    b.Property<int?>("RuleRunId")
                        .HasColumnType("int")
                        .HasColumnName("RuleRunID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable("Assessment_rule_master_api", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssessmentStatus", b =>
                {
                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("StatusId")
                        .HasName("PK__Assessme__C8EE206336DECD87");

                    b.ToTable("AssessmentStatus", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssetTaxPayerDetailsApi", b =>
                {
                    b.Property<string>("Active")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ActiveText")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("AssetAddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetLga")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetLGA");

                    b.Property<string>("AssetName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("BuildingUnitId")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("BuildingUnitID");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TaxPayerEmailAddress")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerMobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxPayerRinnumber")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("TaxPayerRINNumber");

                    b.Property<int?>("TaxPayerRoleId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerRoleID");

                    b.Property<string>("TaxPayerRoleName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("Tpaid")
                        .HasColumnType("int")
                        .HasColumnName("TPAID");

                    b.Property<string>("UnitNumber")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.ToTable("AssetTaxPayerDetails_API", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.AssetType", b =>
                {
                    b.Property<int>("AssetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("asset_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssetId"));

                    b.Property<DateTime>("AssetCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("asset_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("AssetCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("asset_create_by");

                    b.Property<string>("AssetStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("asset_status");

                    b.Property<string>("AssetType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("asset_type");

                    b.HasKey("AssetId");

                    b.ToTable("Asset_Type", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessCategory", b =>
                {
                    b.Property<int>("BsCtId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bs_ct_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsCtId"));

                    b.Property<DateTime>("BsCtCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_ct_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsCtCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_ct_create_by");

                    b.Property<string>("BsCtStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_ct_status");

                    b.Property<string>("BusinessCategory1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_category");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsCtId")
                        .HasName("PK_business_category");

                    b.ToTable("Business_Category", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessOperation", b =>
                {
                    b.Property<int>("BsOpId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("bs_op_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BsOpId"));

                    b.Property<DateTime>("BsOpCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_op_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsOpCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_op_create_by");

                    b.Property<string>("BsOpStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_op_status");

                    b.Property<string>("BusinessOperations")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_operations");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsOpId")
                        .HasName("PK_business_operations");

                    b.ToTable("Business_Operations", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessSector", b =>
                {
                    b.Property<int>("BsScId")
                        .HasColumnType("int")
                        .HasColumnName("bs_sc_id");

                    b.Property<DateTime>("BsScCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_sc_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsScCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_sc_create_by");

                    b.Property<string>("BsScStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_sc_status");

                    b.Property<int>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<string>("BusinessSector1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_sector");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsScId")
                        .HasName("PK_business_sectors");

                    b.ToTable("Business_Sectors", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessStructure", b =>
                {
                    b.Property<int>("BsStId")
                        .HasColumnType("int")
                        .HasColumnName("bs_st_id");

                    b.Property<string>("BsCtStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_ct_status");

                    b.Property<DateTime>("BsStCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_st_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsStCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_st_create_by");

                    b.Property<string>("BusinessStructure1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_structure");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsStId")
                        .HasName("PK_business_structure");

                    b.ToTable("Business_Structure", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessSubSector", b =>
                {
                    b.Property<int>("BsSbId")
                        .HasColumnType("int")
                        .HasColumnName("bs_sb_id");

                    b.Property<DateTime>("BsSbCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("bs_sb_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BsSbCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("bs_sb_create_by");

                    b.Property<string>("BsSbStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bs_sb_status");

                    b.Property<int>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<int>("BusinessSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sector");

                    b.Property<string>("BusinessSubSector1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("business_sub_sector");

                    b.Property<int>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.HasKey("BsSbId")
                        .HasName("PK_business_sub_sectors1");

                    b.ToTable("Business_Sub_Sectors", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessType", b =>
                {
                    b.Property<int>("BusinessTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Business_Type_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BusinessTypeId"));

                    b.Property<string>("BusinessType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Business_Type");

                    b.Property<DateTime>("BusinessTypeCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Business_Type_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("BusinessTypeCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Business_Type_create_by");

                    b.Property<string>("BusinessTypeStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Business_Type_status");

                    b.HasKey("BusinessTypeId")
                        .HasName("PK_Business_Type_Type");

                    b.ToTable("Business_Type", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessesApiMain", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__Business__3214EC072C465F80");

                    b.ToTable("Businesses_API_Main", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.BusinessesFullApi", b =>
                {
                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessAddress")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("BusinessCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessCategoryID");

                    b.Property<string>("BusinessCategoryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessNumber")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessOperationId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessOperationID");

                    b.Property<string>("BusinessOperationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int>("BusinessSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSectorID");

                    b.Property<string>("BusinessSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessStructureId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessStructureID");

                    b.Property<string>("BusinessStructureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessSubSectorId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessSubSectorID");

                    b.Property<string>("BusinessSubSectorName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("BusinessTypeId")
                        .HasColumnType("int")
                        .HasColumnName("BusinessTypeID");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Lgaid")
                        .HasColumnType("int")
                        .HasColumnName("LGAID");

                    b.Property<string>("Lganame")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("LGAName");

                    b.Property<int>("SizeId")
                        .HasColumnType("int")
                        .HasColumnName("SizeID");

                    b.Property<string>("SizeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable("Businesses_Full_API", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.CompanyListApi", b =>
                {
                    b.Property<int>("CompanyListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CompanyListID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompanyListId"));

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("CompanyListId");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("CompanyListId"), false);

                    b.HasIndex(new[] { "TaxPayerId" }, "ClusteredIndex-20190508-102124");

                    SqlServerIndexBuilderExtensions.IsClustered(b.HasIndex(new[] { "TaxPayerId" }, "ClusteredIndex-20190508-102124"));

                    b.HasIndex(new[] { "TaxPayerRin" }, "Ind_CompanyList_API");

                    b.ToTable("CompanyList_API", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.ComplianceStatus", b =>
                {
                    b.Property<int>("ComplianceStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ComplianceStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("ComplianceStatus", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Cooperate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActiveStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("active_status");

                    b.Property<string>("CacNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cac_number");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_type_id");

                    b.Property<string>("ContactAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("contact_address");

                    b.Property<string>("CorporateLogo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("corporate_logo");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedByAppId")
                        .HasColumnType("int")
                        .HasColumnName("created_by_app_id");

                    b.Property<string>("EconomicActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("economic_activity_id");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("Email2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email_2");

                    b.Property<int>("HasValidEmail")
                        .HasColumnType("int")
                        .HasColumnName("has_valid_email");

                    b.Property<int>("IndustrySectorId")
                        .HasColumnType("int")
                        .HasColumnName("industry_sector_id");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LgaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lga_code");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("NormalizedStateTin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("normalized_state_tin");

                    b.Property<string>("ParentTaxpayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("parent_taxpayer_id");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<string>("Phone2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone_2");

                    b.Property<string>("ReminderAnnualProjectionSentAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reminder_annual_projection_sent_at");

                    b.Property<string>("ReminderAnnualReturnSentAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reminder_annual_return_sent_at");

                    b.Property<string>("ReminderSentAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reminder_sent_at");

                    b.Property<string>("StateCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state_code");

                    b.Property<string>("StateTin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state_tin");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<int>("TaxOfficeId")
                        .HasColumnType("int")
                        .HasColumnName("tax_office_id");

                    b.Property<string>("TaxpayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxpayer_id");

                    b.Property<string>("Tin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tin");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Cooperates");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EconomicActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Activity")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("Create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreateBy")
                        .HasColumnType("int")
                        .HasColumnName("Create_by");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("Tax_payer_type");

                    b.HasKey("Id")
                        .HasName("PK_economic_activities");

                    b.ToTable("Economic_Activities", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EirsUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("address");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("created_by");

                    b.Property<DateTime?>("CreatedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("created_on");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("designation");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<string>("MobileNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("mobile_no");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("modified_by");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime")
                        .HasColumnName("modified_on");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("password");

                    b.Property<string>("Status")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .HasColumnName("status")
                        .IsFixedLength();

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.HasKey("UserId");

                    b.ToTable("Eirs_User", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("asset_id");

                    b.Property<int>("Basic")
                        .HasColumnType("int")
                        .HasColumnName("basic");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<string>("Bvn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("bvn");

                    b.Property<int>("CorporateId")
                        .HasColumnType("int")
                        .HasColumnName("corporate_id");

                    b.Property<string>("Cra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("cra");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DeletedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("designation");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("email");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employee_ID");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("employee_rin");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("first_name");

                    b.Property<string>("GrossIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("gross_income");

                    b.Property<string>("HomeAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("home_address");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("JtbTin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("jtb_tin");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("last_name");

                    b.Property<string>("LgaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lga_code");

                    b.Property<int>("LifeAssurance")
                        .HasColumnType("int")
                        .HasColumnName("life_assurance");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<string>("Nhf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nhf");

                    b.Property<string>("Nhis")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nhis");

                    b.Property<string>("Nin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nin");

                    b.Property<string>("NormalizedStateTin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("normalized_state_tin");

                    b.Property<string>("OtherIncome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("other_income");

                    b.Property<string>("OtherName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("other_name");

                    b.Property<string>("Pension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("pension");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<int>("Rent")
                        .HasColumnType("int")
                        .HasColumnName("rent");

                    b.Property<string>("StartMonth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("start_month");

                    b.Property<string>("StateCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state_code");

                    b.Property<string>("StateTin")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state_tin");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("TaxpayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxpayer_id");

                    b.Property<string>("Tin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("tin");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.Property<int>("TotalIncome")
                        .HasColumnType("int")
                        .HasColumnName("total_income");

                    b.Property<int>("Transport")
                        .HasColumnType("int")
                        .HasColumnName("transport");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("zip_code");

                    b.HasKey("Id");

                    b.ToTable("employees", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EmployeeAnnualTax", b =>
                {
                    b.Property<decimal?>("AnnualTax")
                        .HasColumnType("numeric(29, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.ToTable((string)null);

                    b.ToView("EmployeeAnnualTax", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EmployeesMonthlyIncome", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Basic")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LifeAssurance")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Ltg")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Meal")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("ModifiedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Others")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<bool?>("Status")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("Utility")
                        .HasColumnType("numeric(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("EmployeesMonthlyIncome", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EmployeesMonthlySchedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssessementStatusId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Ci")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CI");

                    b.Property<decimal?>("Cra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CRA");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("LifeAssurance")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("Tfp")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("TFP");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id");

                    b.ToTable("EmployeesMonthlySchedule", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EmployerMonthlyAssessment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AssessmentRefId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmployerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalAssessed")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC07CDF6292B");

                    b.ToTable("EmployerMonthlyAssessment", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.EmployerMonthlyAssessmentHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AssCreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("AssCreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("AssessmentRefId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EmployerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("TotalAssessed")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK__Employee__3214EC07A319086D");

                    b.ToTable("EmployerMonthlyAssessmentHistory", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.FileStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("StatusName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable("FileStatus", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.FormH1employeeUpload", b =>
                {
                    b.Property<decimal?>("Annualtaxpaid")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ANNUALTAXPAID");

                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Consolidatedreliefallowancecra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CONSOLIDATEDRELIEFALLOWANCECRA");

                    b.Property<string>("Createdby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("createdby")
                        .IsFixedLength();

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnType("datetime")
                        .HasColumnName("datemodified");

                    b.Property<DateTime?>("Datetcreated")
                        .HasColumnType("datetime")
                        .HasColumnName("datetcreated");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IndividalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Lifeassurance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LIFEASSURANCE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("modifiedby")
                        .IsFixedLength();

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHF");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHIS");

                    b.Property<decimal?>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PENSION");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Totalmonthspaid")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("TOTALMONTHSPAID");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable("FormH1EmployeeUpload", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.FormH3employeeUpload", b =>
                {
                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Createdby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnType("datetime")
                        .HasColumnName("datemodified");

                    b.Property<DateTime?>("Datetcreated")
                        .HasColumnType("datetime")
                        .HasColumnName("datetcreated");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IndividualId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Lifeassurance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LIFEASSURANCE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modifiedby");

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHF");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHIS");

                    b.Property<decimal?>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PENSION");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Rin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RIN");

                    b.Property<string>("Startmonth")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("STARTMONTH");

                    b.Property<string>("TaxPayerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable("FormH3EmployeeUpload", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Individual", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("Bvn")
                        .HasColumnType("int")
                        .HasColumnName("BVN");

                    b.Property<string>("Createdby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnType("datetime")
                        .HasColumnName("datemodified");

                    b.Property<DateTime?>("Datetcreated")
                        .HasColumnType("datetime")
                        .HasColumnName("datetcreated");

                    b.Property<string>("Designation")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("EMAIL_ADDRESS");

                    b.Property<string>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Firstname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FIRSTNAME");

                    b.Property<string>("Homeaddress")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("HOMEADDRESS");

                    b.Property<string>("Jtbtin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("JTBTIN");

                    b.Property<int?>("LgaCode")
                        .HasColumnType("int")
                        .HasColumnName("LGA_CODE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modifiedby");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NATIONALITY");

                    b.Property<string>("Nin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NIN");

                    b.Property<string>("Othername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("OTHERNAME");

                    b.Property<string>("Phonenumber")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PHONENUMBER");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("SURNAME");

                    b.Property<string>("Title")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ZIP_CODE");

                    b.HasKey("Id")
                        .HasName("PK_Individual_Id");

                    b.HasIndex(new[] { "EmployeeRin" }, "UQ_EmployeeRin")
                        .IsUnique()
                        .HasFilter("[EmployeeRin] IS NOT NULL");

                    b.ToTable("Individual", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.IndividualsApi", b =>
                {
                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.HasKey("TaxPayerId");

                    b.ToTable("Individuals_API", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.LocalGovernment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LgaCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("lga_code");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("LocalGovernments");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.LocalGovernmentArea", b =>
                {
                    b.Property<int>("LgaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("lga_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LgaId"));

                    b.Property<string>("Lga")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("lga");

                    b.Property<string>("LgaClass")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lga_class");

                    b.Property<DateTime>("LgaCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("lga_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("LgaCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("lga_create_by");

                    b.Property<string>("LgaStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("lga_status");

                    b.HasKey("LgaId");

                    b.ToTable("Local_Government_Areas", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.LocalGovtPostalCodee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Active")
                        .HasColumnType("int")
                        .HasColumnName("active");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("city");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Postalcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("postalcode");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("state");

                    b.Property<int>("StateId")
                        .HasColumnType("int")
                        .HasColumnName("state_id");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("LocalGovtPostalCodees");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.MstUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<bool?>("Active")
                        .HasColumnType("bit");

                    b.Property<int?>("AgencyId")
                        .HasColumnType("int")
                        .HasColumnName("AgencyID");

                    b.Property<string>("ContactName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("ContactNumber")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("FailedLoginCount")
                        .HasColumnType("int");

                    b.Property<bool?>("IsDirector")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsTomanager")
                        .HasColumnType("bit")
                        .HasColumnName("IsTOManager");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime");

                    b.Property<int?>("ModifiedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("SignaturePath")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("TaxOfficeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxOfficeID");

                    b.Property<string>("Title")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("TomanagerId")
                        .HasColumnType("int")
                        .HasColumnName("TOManagerID");

                    b.Property<string>("UserName")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<int?>("UserTypeId")
                        .HasColumnType("int")
                        .HasColumnName("UserTypeID");

                    b.HasKey("UserId");

                    b.ToTable("MST_Users", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.MyView", b =>
                {
                    b.Property<string>("AssessmentItemId")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("MyView", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.MyView1", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("MyView_1", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Nationality", b =>
                {
                    b.Property<string>("Adjective")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("adjective");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<string>("CountryCode")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country_code");

                    b.Property<int>("NationalityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NationalityId"));

                    b.ToTable("Nationality", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PayeInputFile", b =>
                {
                    b.Property<double?>("AnnualBasic")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualRent")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTransport")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<double?>("LeaveTransportAnnual")
                        .HasColumnType("float")
                        .HasColumnName("LeaveTransport_Annual");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("OtherAllowancesAnnual")
                        .HasColumnType("float")
                        .HasColumnName("OtherAllowances_Annual");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<byte?>("StatusId")
                        .HasColumnType("tinyint");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("PayeInputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PayeOuputFile", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTax")
                        .HasColumnType("float");

                    b.Property<int?>("ApiId")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double?>("ChargeableIncome")
                        .HasColumnType("float");

                    b.Property<double?>("Cra")
                        .HasColumnType("float")
                        .HasColumnName("CRA");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("TaxFreePay")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<double?>("ValidatedNhf")
                        .HasColumnType("float")
                        .HasColumnName("ValidatedNHF");

                    b.Property<double?>("ValidatedNhis")
                        .HasColumnType("float")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<double?>("ValidatedPension")
                        .HasColumnType("float");

                    b.HasIndex(new[] { "Status" }, "Ind_PayeOuputFile");

                    b.HasIndex(new[] { "EmployerRin", "EmployeeRin", "AssessmentYear" }, "NonClusteredIndex-20190508-102920");

                    b.ToTable("PayeOuputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PayeRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Role")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("RoleId");

                    b.ToTable("PayeRole", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PayeUserType", b =>
                {
                    b.Property<int>("UserTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserTypeId"));

                    b.Property<string>("UserType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("UserTypeId");

                    b.ToTable("PayeUserType", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PreAsessmentTemp", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<int?>("Status")
                        .HasColumnType("int")
                        .HasColumnName("STATUS");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable("Pre_Asessment_Temp", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.PreAssessment", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("EmployerRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployerRIN");

                    b.ToTable((string)null);

                    b.ToView("PreAssessment", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Projection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnnualProjectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("annual_projection_id");

                    b.Property<int>("AppId")
                        .HasColumnType("int")
                        .HasColumnName("app_id");

                    b.Property<int>("ApprovalStatus")
                        .HasColumnType("int")
                        .HasColumnName("approval_status");

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("business_id");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("business_name");

                    b.Property<int>("BusinessPrimaryId")
                        .HasColumnType("int")
                        .HasColumnName("business_primary_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("company_name");

                    b.Property<int>("CorporateId")
                        .HasColumnType("int")
                        .HasColumnName("corporate_id");

                    b.Property<string>("CreatedAt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("DateForwarded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_forwarded");

                    b.Property<int>("EmployeesCount")
                        .HasColumnType("int")
                        .HasColumnName("employees_count");

                    b.Property<string>("FileProjectionStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("file_projection_status");

                    b.Property<string>("ForwardedTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("forwarded_to");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("ProjectionYear")
                        .HasColumnType("int")
                        .HasColumnName("projection_year");

                    b.Property<bool>("Status")
                        .HasColumnType("bit")
                        .HasColumnName("status");

                    b.Property<string>("TaxpayerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("taxpayer_id");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Projections");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.ProjectionStatus", b =>
                {
                    b.Property<int>("ProjectionStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ProjectionStatusName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("ProjectionStatus", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Schedule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AssessmentStatus")
                        .HasColumnType("int")
                        .HasColumnName("assessment_status");

                    b.Property<int>("BusinessId")
                        .HasColumnType("int")
                        .HasColumnName("business_id");

                    b.Property<int>("CorporateId")
                        .HasColumnType("int")
                        .HasColumnName("corporate_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("CreatedByAppId")
                        .HasColumnType("int")
                        .HasColumnName("created_by_app_id");

                    b.Property<string>("DateForwarded")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("date_forwarded");

                    b.Property<string>("DueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("due_date");

                    b.Property<int>("ForwardedTo")
                        .HasColumnType("int")
                        .HasColumnName("forwarded_to");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int")
                        .HasColumnName("status");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.ToTable("Schedules");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.ScheduleComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("BusinessID")
                        .IsFixedLength();

                    b.Property<string>("Commenter")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CommenterId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Commenter_ID");

                    b.Property<string>("CommenterType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Commenter_Type");

                    b.Property<string>("CompanyId")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .HasColumnName("CompanyID")
                        .IsFixedLength();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ScheduleComment", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.ScheduleRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float>("Cra")
                        .HasColumnType("real")
                        .HasColumnName("cra");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int")
                        .HasColumnName("employee_id");

                    b.Property<int>("GrossIncome")
                        .HasColumnType("int")
                        .HasColumnName("gross_income");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LifeAssurance")
                        .HasColumnType("int")
                        .HasColumnName("life_assurance");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<int>("Nhf")
                        .HasColumnType("int")
                        .HasColumnName("nhf");

                    b.Property<int>("Nhis")
                        .HasColumnType("int")
                        .HasColumnName("nhis");

                    b.Property<int>("Pension")
                        .HasColumnType("int")
                        .HasColumnName("pension");

                    b.Property<int>("ScheduleId")
                        .HasColumnType("int")
                        .HasColumnName("schedule_id");

                    b.Property<int>("TotalIncome")
                        .HasColumnType("int")
                        .HasColumnName("total_income");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.ToTable("Schedule_Records", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.ScheduleStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<bool>("Assessed")
                        .HasColumnType("bit");

                    b.Property<bool>("Declined")
                        .HasColumnType("bit");

                    b.Property<string>("ForwardedToHeadOfStation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Forwarded_To_Head_Of_Station");

                    b.HasKey("Id");

                    b.ToTable("ScheduleStatus", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Settlement", b =>
                {
                    b.Property<long>("SettleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("settle_ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("SettleId"));

                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<int>("SettleCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("settle_create_by");

                    b.Property<DateTime>("SettleCreateOn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("settle_create_on")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SettlementMethod")
                        .HasColumnType("int")
                        .HasColumnName("settlement_method");

                    b.Property<string>("SettlementNotes")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("settlement_notes");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.Property<int>("SettlementStatus")
                        .HasColumnType("int")
                        .HasColumnName("settlement_status");

                    b.HasKey("SettleId");

                    b.ToTable("Settlements");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.SettlementStatus", b =>
                {
                    b.Property<int>("SettStId")
                        .HasColumnType("int")
                        .HasColumnName("sett_st_id");

                    b.Property<DateTime>("SettStCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("sett_st_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SettStCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("sett_st_create_by");

                    b.Property<string>("SettlementStatus1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("StatusDescription")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status_description");

                    b.HasKey("SettStId");

                    b.ToTable("Settlement_Status", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.SspfiledFormH3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Annualtaxpaid")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("ANNUALTAXPAID");

                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComplianceStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<decimal?>("Consolidatedreliefallowancecra")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("CONSOLIDATEDRELIEFALLOWANCECRA");

                    b.Property<string>("Createdby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnType("datetime")
                        .HasColumnName("datemodified");

                    b.Property<DateTime?>("Datetcreated")
                        .HasColumnType("datetime")
                        .HasColumnName("datetcreated");

                    b.Property<string>("DueDate")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FiledStatus")
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength();

                    b.Property<string>("IndividalId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Lifeassurance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LIFEASSURANCE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modifiedby");

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHF");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHIS");

                    b.Property<decimal?>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PENSION");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Rin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RIN");

                    b.Property<string>("TaxPayerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("Totalmonthspaid")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("TOTALMONTHSPAID");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("Id")
                        .HasName("PK_SSPFiledFormH1s");

                    b.ToTable("SSPFiledFormH3", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.SspfiledFormH31", b =>
                {
                    b.Property<decimal?>("Basic")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("BusinessId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CompanyId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ComplianceStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Createdby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("createdby");

                    b.Property<DateTime?>("Datemodified")
                        .HasColumnType("datetime")
                        .HasColumnName("datemodified");

                    b.Property<DateTime?>("Datetcreated")
                        .HasColumnType("datetime")
                        .HasColumnName("datetcreated");

                    b.Property<string>("DueDate")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FiledStatus")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IndividalId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Lifeassurance")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("LIFEASSURANCE");

                    b.Property<string>("Modifiedby")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("modifiedby");

                    b.Property<decimal?>("Nhf")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHF");

                    b.Property<decimal?>("Nhis")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("NHIS");

                    b.Property<decimal?>("OtherIncome")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal?>("Pension")
                        .HasColumnType("decimal(18, 2)")
                        .HasColumnName("PENSION");

                    b.Property<decimal?>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Rin")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RIN");

                    b.Property<string>("TaxPayerId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("Transport")
                        .HasColumnType("decimal(18, 2)");

                    b.ToTable("SSPFiledFormH3s", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.TaxOffice", b =>
                {
                    b.Property<int>("ToId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("to_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ToId"));

                    b.Property<string>("TaStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ta_status");

                    b.Property<string>("TaxOffice1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_office");

                    b.Property<DateTime>("ToCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("to_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("ToCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("to_create_by");

                    b.HasKey("ToId")
                        .HasName("PK_tax_office");

                    b.ToTable("Tax_Offices", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.TaxOffice1", b =>
                {
                    b.Property<int>("TaxOfficeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxOfficeName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("TaxOfficeId")
                        .HasName("PK__TaxOffic__0890699DDE754B88");

                    b.ToTable("TaxOffices", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.TaxPayerType", b =>
                {
                    b.Property<int>("TptypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tptype_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TptypeId"));

                    b.Property<string>("TaxPayerType1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_type");

                    b.Property<DateTime>("TptypeCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("tptype_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TptypeCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("tptype_create_by");

                    b.Property<string>("TptypeStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tptype_status");

                    b.HasKey("TptypeId");

                    b.ToTable("Tax_Payer_Types", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.TccRequest", b =>
                {
                    b.Property<string>("BusinessId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DateRequested")
                        .HasColumnType("datetime");

                    b.Property<string>("EmployeeId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployerId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FormH2pathName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("FormH2PathName");

                    b.Property<string>("RequestedById")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TccRequestRefNo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TccRequestRefNo"));

                    b.Property<int?>("TccRequestYear")
                        .HasColumnType("int");

                    b.ToTable("TccRequest", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Title", b =>
                {
                    b.Property<int>("TitleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("title_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TitleId"));

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("gender");

                    b.Property<string>("Title1")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<DateTime>("TitleCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("title_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TitleCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("title_create_by");

                    b.Property<string>("TitleStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("title_status");

                    b.HasKey("TitleId");

                    b.ToTable("Titles");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.TokenManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("createdAt")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Token")
                        .HasMaxLength(1000)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("token");

                    b.Property<string>("UpdatedAt")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("updatedAt")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("Id")
                        .HasName("PK__TokenMan__3213E83FA0C45C2C");

                    b.ToTable("TokenManagement", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Town", b =>
                {
                    b.Property<int>("TownId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("town_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TownId"));

                    b.Property<int>("Lga")
                        .HasColumnType("int")
                        .HasColumnName("lga");

                    b.Property<DateTime>("TownCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("town_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("TownCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("town_create_by");

                    b.Property<string>("TownStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("town_status");

                    b.Property<string>("Towns")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("towns");

                    b.HasKey("TownId");

                    b.ToTable("Towns");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.UserManagement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyRin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<long>("ModifiedBy")
                        .HasColumnType("bigint");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TaxpayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UniqueId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VerificationOtp")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserManagements");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwAssessIndSal", b =>
                {
                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_assess_ind_sal", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwAssessIndSalRefund", b =>
                {
                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_assess_ind_sal_refund", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwAssessmentRule", b =>
                {
                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("AssetTypeName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("PaymentFrequencyId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentFrequencyID");

                    b.Property<string>("PaymentFrequencyName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<int?>("PaymentOptionId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentOptionID");

                    b.Property<string>("PaymentOptionName")
                        .IsRequired()
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)");

                    b.Property<string>("ProfileDescription")
                        .IsRequired()
                        .HasMaxLength(55)
                        .IsUnicode(false)
                        .HasColumnType("varchar(55)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("ProfileReferenceNo")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("RuleRunId")
                        .HasColumnType("int")
                        .HasColumnName("RuleRunID");

                    b.Property<string>("RuleRunName")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Assessment_Rules", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwAssessmentSearch", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("AssessmentDate")
                        .HasColumnType("datetime")
                        .HasColumnName("assessment_date");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("AssessmentStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_status");

                    b.Property<int?>("AssessmentStatus1")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentStatus");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("SStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("S_Status");

                    b.Property<string>("SettlementStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("tax_payer_rin");

                    b.Property<string>("TaxPayerType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tax_payer_type");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.Property<string>("TptypeStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tptype_status");

                    b.ToTable((string)null);

                    b.ToView("vw_assessment_search", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwBusinessCompRelation", b =>
                {
                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.ToTable((string)null);

                    b.ToView("vw_business_comp_relation", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwBusinessDetail", b =>
                {
                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxPayerRinB")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN_b");

                    b.ToTable((string)null);

                    b.ToView("vw_BusinessDetails", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwClearanceCertReq", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentChildRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_child_ref");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("IsPaid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MonthTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("tax_payer_name");

                    b.Property<string>("YearTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_clearanceCertReq", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwCompIndSal", b =>
                {
                    b.Property<string>("Address")
                        .HasMaxLength(302)
                        .IsUnicode(false)
                        .HasColumnType("varchar(302)");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyRinOk")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin_ok");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime")
                        .HasColumnName("end_date");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<int>("Gender")
                        .HasColumnType("int")
                        .HasColumnName("gender");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<string>("IsValidated")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nationality");

                    b.Property<int?>("NationalityId")
                        .HasColumnType("int")
                        .HasColumnName("nationality_id");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalCalcTax")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax");

                    b.Property<double?>("SalCalcTaxMonthly")
                        .HasColumnType("float")
                        .HasColumnName("sal_calc_tax_monthly");

                    b.Property<double?>("SalChIncome")
                        .HasColumnType("float")
                        .HasColumnName("sal_ch_income");

                    b.Property<DateTime?>("SalCreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("sal_create_at");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<long>("SalId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_id");

                    b.Property<double?>("SalNhf")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf");

                    b.Property<double?>("SalNhis")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis");

                    b.Property<double?>("SalPension")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension");

                    b.Property<double?>("SalRent")
                        .HasColumnType("float")
                        .HasColumnName("sal_rent");

                    b.Property<double?>("SalTaxFreePay")
                        .HasColumnType("float")
                        .HasColumnName("sal_tax_free_pay");

                    b.Property<double?>("SalTrans")
                        .HasColumnType("float")
                        .HasColumnName("sal_trans");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tin");

                    b.Property<int>("Title")
                        .HasColumnType("int")
                        .HasColumnName("title");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_comp_ind_sal", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwCompany", b =>
                {
                    b.Property<double?>("AccountBalance")
                        .HasColumnType("float")
                        .HasColumnName("account_balance");

                    b.Property<string>("Add1Hno")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add1_hno");

                    b.Property<string>("Add2Street")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add2_street");

                    b.Property<string>("Add3OffstreetTown")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("Add3_offstreet_town");

                    b.Property<string>("AssetType")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("asset_type");

                    b.Property<int?>("BusinessCategory")
                        .HasColumnType("int")
                        .HasColumnName("business_category");

                    b.Property<int?>("BusinessCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("business_create_by");

                    b.Property<DateTime?>("BusinessCreateDate")
                        .HasColumnType("datetime")
                        .HasColumnName("business_create_date");

                    b.Property<long?>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("business_id");

                    b.Property<int?>("BusinessLga")
                        .HasColumnType("int")
                        .HasColumnName("business_lga");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("business_name");

                    b.Property<int?>("BusinessOperations")
                        .HasColumnType("int")
                        .HasColumnName("business_operations");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("business_rin");

                    b.Property<int?>("BusinessSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sector");

                    b.Property<int?>("BusinessStructure")
                        .HasColumnType("int")
                        .HasColumnName("business_structure");

                    b.Property<int?>("BusinessSubSector")
                        .HasColumnType("int")
                        .HasColumnName("business_sub_sector");

                    b.Property<int?>("BusinessType")
                        .HasColumnType("int")
                        .HasColumnName("business_type");

                    b.Property<DateTime>("CompanyCreateAt")
                        .HasColumnType("datetime")
                        .HasColumnName("company_create_at");

                    b.Property<int>("CompanyCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("company_create_by");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("company_id");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("ContactPerson")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact_person");

                    b.Property<int>("EconomicActivity")
                        .HasColumnType("int")
                        .HasColumnName("economic_activity");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("EmailAddress2")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_2");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("MobileNumber2")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_2");

                    b.Property<int>("PreferredNotificationMethod")
                        .HasColumnType("int")
                        .HasColumnName("preferred_notification_method");

                    b.Property<string>("Profile")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("profile");

                    b.Property<int?>("State")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("status");

                    b.Property<int?>("TaxOffice")
                        .HasColumnType("int")
                        .HasColumnName("tax_office");

                    b.Property<string>("TaxPayerStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("tax_payer_status");

                    b.Property<int>("TaxPayerType")
                        .HasColumnType("int")
                        .HasColumnName("tax_payer_type");

                    b.Property<int?>("Town")
                        .HasColumnType("int")
                        .HasColumnName("town");

                    b.Property<string>("UserName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user_name");

                    b.ToTable((string)null);

                    b.ToView("vw_companies", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwCorporatesAsset", b =>
                {
                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("AssetTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxPayerRinB")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN_b");

                    b.ToTable((string)null);

                    b.ToView("vw_Corporates_Assets", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwDistinctIndividual", b =>
                {
                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmailAddress")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<string>("TaxPayerTypeName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("TIN");

                    b.ToTable((string)null);

                    b.ToView("vw_distinct_Individuals", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwEmployeeContributionOutputFile", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_EmployeeContributionOutputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwEmployerContribution", b =>
                {
                    b.Property<decimal?>("Apr")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<int?>("EmployeeCount")
                        .HasColumnType("int")
                        .HasColumnName("employeeCount");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Employer_Contribution", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwEmployerContributionOld", b =>
                {
                    b.Property<decimal?>("Apr")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("Aug")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Dec")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Employername")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("employername");

                    b.Property<decimal?>("Feb")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jul")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Jun")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Mar")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("May")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Nov")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Oct")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<decimal?>("Sep")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_Employer_Contribution_old", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwGetCollectorOutputFile", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentYear1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployeRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("EmployeRIN");

                    b.Property<string>("EmployeeName")
                        .HasMaxLength(302)
                        .IsUnicode(false)
                        .HasColumnType("varchar(302)");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxOffice")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_getCollectorOutputFIle", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwGetDistinctInputFile", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_getDistinct_input_file", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwGetPreAssessment", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_GetPreAssessment", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwGetPreAssessment31Jan2020", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("EmployerRIN");

                    b.Property<double?>("MonthlyTax")
                        .HasColumnType("float")
                        .HasColumnName("monthlyTax");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int?>("TaxPayerTypeId")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_GetPreAssessment_31_JAN_2020", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwIndDetail", b =>
                {
                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("DateOfBirth")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("EmailAddress1")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("first_name");

                    b.Property<long>("IndId")
                        .HasColumnType("bigint")
                        .HasColumnName("ind_id");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("last_name");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nationality");

                    b.Property<double?>("SalBasic")
                        .HasColumnType("float")
                        .HasColumnName("sal_basic");

                    b.Property<double?>("SalChIncome")
                        .HasColumnType("float")
                        .HasColumnName("sal_ch_income");

                    b.Property<double?>("SalGross")
                        .HasColumnType("float")
                        .HasColumnName("sal_gross");

                    b.Property<double?>("SalNhfDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhf_declared");

                    b.Property<double?>("SalNhisDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_nhis_declared");

                    b.Property<double?>("SalPensionDeclared")
                        .HasColumnType("float")
                        .HasColumnName("sal_pension_declared");

                    b.Property<string>("Tin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("tin");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_ind_details", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwInputFile", b =>
                {
                    b.Property<double>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwInputFileMain", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<string>("AnnualMeal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AnnualUtility")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("nationality");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("title");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFileMain", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwInputFileMainView", b =>
                {
                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<string>("AnnualMeal")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("AnnualUtility")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<double?>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("BusinessRin1")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN_1");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("LastName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Nationality")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("nationality");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("varchar(3)");

                    b.Property<string>("TaxMonth")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TaxYear1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("TaxYear");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("title");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_InputFile_MainView", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwInt", b =>
                {
                    b.Property<double?>("AnnualBasic")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualGross")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualRent")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualTransport")
                        .HasColumnType("float");

                    b.Property<double?>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<double?>("LeaveTransportAnnual")
                        .HasColumnType("float")
                        .HasColumnName("LeaveTransport_Annual");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("OtherAllowancesAnnual")
                        .HasColumnType("float")
                        .HasColumnName("OtherAllowances_Annual");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.ToTable((string)null);

                    b.ToView("vw_int", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwLegacySubmission", b =>
                {
                    b.Property<double>("AnnualMeal")
                        .HasColumnType("float");

                    b.Property<double>("AnnualUtility")
                        .HasColumnType("float");

                    b.Property<double?>("Basic")
                        .HasColumnType("float");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<int?>("Category")
                        .HasColumnType("int");

                    b.Property<int>("Lsid")
                        .HasColumnType("int")
                        .HasColumnName("LSID");

                    b.Property<double?>("Ltg")
                        .HasColumnType("float")
                        .HasColumnName("LTG");

                    b.Property<string>("MobileNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Nhf")
                        .HasColumnType("float")
                        .HasColumnName("NHF");

                    b.Property<double?>("Nhis")
                        .HasColumnType("float")
                        .HasColumnName("NHIS");

                    b.Property<double?>("Others")
                        .HasColumnType("float");

                    b.Property<double?>("Pension")
                        .HasColumnType("float");

                    b.Property<double?>("Rent")
                        .HasColumnType("float");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<string>("TpTin")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Tp_TIN");

                    b.Property<double?>("Trans")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_Legacy_Submissions", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwMonthlyTaxCompanyWise", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_monthly_tax_company_wise", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwMonthlyTaxEmpWise", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("vw_monthly_tax_emp_wise", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPateInputFile", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BsnRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bsnRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CmpRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("cmpRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tx")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tx");

                    b.ToTable((string)null);

                    b.ToView("vw_PateInputFile", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPayeInputFile", b =>
                {
                    b.Property<string>("BsnRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("bsnRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Tx")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("tx");

                    b.ToTable((string)null);

                    b.ToView("vw_PayeInputFile", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPayeInputFileN", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_PayeInputFile_N", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPayment", b =>
                {
                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric(18, 0)");

                    b.Property<string>("AssessmentChildRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_child_ref");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("IsPaid")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("MonthTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime?>("NotificationDate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("PaidOn")
                        .HasColumnType("datetime");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(14)
                        .IsUnicode(false)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("YearTax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.ToTable((string)null);

                    b.ToView("vw_Payment", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPaymentDetail", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<int?>("AssessmentApprovalStatus")
                        .HasColumnType("int");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("company_name");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<string>("EmailAddress1")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email_address_1");

                    b.Property<string>("Expr1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("MobileNumber1")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("mobile_number_1");

                    b.Property<int>("TaxYear")
                        .HasColumnType("int")
                        .HasColumnName("tax_year");

                    b.ToTable((string)null);

                    b.ToView("vw_payment_details", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPerformanceReport", b =>
                {
                    b.Property<double>("ActualAssessmentAmt")
                        .HasColumnType("float");

                    b.Property<double>("AmountAccessed")
                        .HasColumnType("float");

                    b.Property<DateTime>("AssessmDate")
                        .HasColumnType("datetime")
                        .HasColumnName("Assessm_date");

                    b.Property<string>("AssessmentDate")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("assessment_date");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime?>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.ToTable((string)null);

                    b.ToView("vw_Performance_Report", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwPreAssessmentRdm", b =>
                {
                    b.Property<string>("AssessmentRefNo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Assessment_RefNo");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("TaxBaseAmount")
                        .HasColumnType("float");

                    b.Property<string>("TaxPayerName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.ToTable((string)null);

                    b.ToView("vw_PreAssessmentRDM", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwRefundCase1", b =>
                {
                    b.Property<double>("AfterJoin")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<double>("IncCase")
                        .HasColumnType("float");

                    b.ToTable((string)null);

                    b.ToView("Vw_RefundCase1", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwRulesCheck", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxMonth1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwRulesCheck1", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TaxMonth1")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check1", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwRulesCheckOld", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float");

                    b.Property<string>("AssessmentRuleCode")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxPayerRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("TaxPayerRIN");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Rules_Check_old", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSalBkupAfterJoinCase", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.ToTable((string)null);

                    b.ToView("vw_sal_bkup_after_join_case", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSalBkupIncrementCase", b =>
                {
                    b.Property<double?>("Apr")
                        .HasColumnType("float");

                    b.Property<double?>("Aug")
                        .HasColumnType("float");

                    b.Property<string>("CompanyRin")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("company_rin");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("company_tin");

                    b.Property<double?>("Dec")
                        .HasColumnType("float");

                    b.Property<double?>("Feb")
                        .HasColumnType("float");

                    b.Property<double?>("Jan")
                        .HasColumnType("float");

                    b.Property<double?>("Jul")
                        .HasColumnType("float");

                    b.Property<double?>("Jun")
                        .HasColumnType("float");

                    b.Property<double?>("Mar")
                        .HasColumnType("float");

                    b.Property<double?>("May")
                        .HasColumnType("float");

                    b.Property<double?>("Nov")
                        .HasColumnType("float");

                    b.Property<double?>("Oct")
                        .HasColumnType("float");

                    b.Property<long?>("SalEmployeeId")
                        .HasColumnType("bigint")
                        .HasColumnName("sal_employee_id");

                    b.Property<double?>("Sep")
                        .HasColumnType("float");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime")
                        .HasColumnName("start_date");

                    b.Property<string>("UserRin")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("user_rin");

                    b.ToTable((string)null);

                    b.ToView("vw_sal_bkup_increment_case", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSettlement", b =>
                {
                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<string>("SettlementMethod")
                        .IsRequired()
                        .HasMaxLength(17)
                        .IsUnicode(false)
                        .HasColumnType("varchar(17)")
                        .HasColumnName("settlement_method");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.ToTable((string)null);

                    b.ToView("vw_settlements", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSettlementReport", b =>
                {
                    b.Property<double>("AssessmentAmount")
                        .HasColumnType("float")
                        .HasColumnName("assessment_amount");

                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double>("SettlementAmount")
                        .HasColumnType("float")
                        .HasColumnName("settlement_amount");

                    b.Property<DateTime>("SettlementDate")
                        .HasColumnType("datetime")
                        .HasColumnName("settlement_date");

                    b.Property<string>("SettlementRef")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("settlement_ref");

                    b.Property<string>("SettlementStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("settlement_status");

                    b.Property<string>("StatusDescription")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)")
                        .HasColumnName("status_description");

                    b.ToTable((string)null);

                    b.ToView("vw_settlement_report", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSettlementReport2", b =>
                {
                    b.Property<string>("AssessmentRef")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("assessment_ref");

                    b.Property<double?>("SAmt")
                        .HasColumnType("float")
                        .HasColumnName("s_amt");

                    b.ToTable((string)null);

                    b.ToView("vw_settlement_report_2", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusiness", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFile", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFileAll", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFileAll1", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_1", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFileAll2", b =>
                {
                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Flag")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)")
                        .HasColumnName("Tax_Year");

                    b.Property<int>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_2", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFileAllA", b =>
                {
                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int?>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_Year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_A", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwShowBusinessPayeInputFileAllSelected", b =>
                {
                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("CodedStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyRin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("CompanyRIN");

                    b.Property<string>("CompanyTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("CompanyTIN");

                    b.Property<string>("FiledStatus")
                        .IsRequired()
                        .HasMaxLength(7)
                        .IsUnicode(false)
                        .HasColumnType("varchar(7)");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)");

                    b.Property<string>("SuccessfulStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("TaxYear")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Tax_Year");

                    b.Property<int?>("Totalcount")
                        .HasColumnType("int")
                        .HasColumnName("totalcount");

                    b.ToTable((string)null);

                    b.ToView("vw_ShowBusiness_PayeInputFile_All_Selected", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSubmission", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_Submissions", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSubmissionView", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_Submission_View", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSubmissionViewOtherMonth", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_Submission_View_otherMonths", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwSubmissions1", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("Jan")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<string>("TaxMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TaxYear")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.ToTable((string)null);

                    b.ToView("vw_submissions_1", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxAnalysis", b =>
                {
                    b.Property<string>("AnnualGross")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualGrossActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualGross_Actual");

                    b.Property<string>("AnnualTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualTax_Actual");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("ChargeableIncome")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Cra")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CRA");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MonthlyTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("MonthlyTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("MonthlyTax_Actual");

                    b.Property<string>("Names")
                        .HasMaxLength(201)
                        .IsUnicode(false)
                        .HasColumnType("varchar(201)")
                        .HasColumnName("names");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxFreePay")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ValidatedNhf")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHF");

                    b.Property<string>("ValidatedNhis")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<string>("ValidatedPension")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxAnalysis", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxAnalysis24Oct2019", b =>
                {
                    b.Property<string>("AnnualGross")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualGrossActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualGross_Actual");

                    b.Property<string>("AnnualTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("AnnualTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("AnnualTax_Actual");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("ChargeableIncome")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("ContactAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Cra")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("CRA");

                    b.Property<string>("EmployeeRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeRIN");

                    b.Property<string>("EmployeeTin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployeeTIN");

                    b.Property<string>("EmployerAddress")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("EndMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MiddleName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("MonthlyTax")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<double?>("MonthlyTaxActual")
                        .HasColumnType("float")
                        .HasColumnName("MonthlyTax_Actual");

                    b.Property<string>("Names")
                        .HasMaxLength(201)
                        .IsUnicode(false)
                        .HasColumnType("varchar(201)")
                        .HasColumnName("names");

                    b.Property<string>("Nationality")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("StartMonth")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TaxFreePay")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<string>("Title")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("ValidatedNhf")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHF");

                    b.Property<string>("ValidatedNhis")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)")
                        .HasColumnName("ValidatedNHIS");

                    b.Property<string>("ValidatedPension")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxAnalysis_24_OCT_2019", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxComputation", b =>
                {
                    b.Property<decimal?>("AprilContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<decimal?>("AugustContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<decimal?>("DecemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<decimal?>("FebruaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JanuaryContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JulyContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("JuneContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MarchContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("MayContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("NovemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<decimal?>("OctoberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<string>("RdmStatus")
                        .IsRequired()
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("RDM_Status");

                    b.Property<decimal?>("SpetemberContributions")
                        .HasColumnType("numeric(18, 2)");

                    b.Property<int?>("Status")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_tax_computation", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxComputationEmployerCollection", b =>
                {
                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentYear")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("Assessment_Year");

                    b.Property<string>("AssetRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("AssetRIN");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Employername")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("employername");

                    b.Property<decimal?>("Tax")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_Tax_Computation_EmployerCollection", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxComputationFinal", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItemName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("AssessmentRuleName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<int?>("AssetId")
                        .HasColumnType("int")
                        .HasColumnName("AssetID");

                    b.Property<int?>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Month")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int?>("ProfileId")
                        .HasColumnType("int")
                        .HasColumnName("ProfileID");

                    b.Property<decimal?>("TaxAmt")
                        .HasColumnType("numeric(38, 2)");

                    b.Property<int>("TaxPayerId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.ToTable((string)null);

                    b.ToView("vw_tax_computation_finals", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTaxbaseComputationFinal", b =>
                {
                    b.Property<int?>("AssessmentYear")
                        .HasColumnType("int");

                    b.Property<string>("BusinessRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("BusinessRIN");

                    b.Property<string>("EmployerName")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EmployerRin")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("EmployerRIN");

                    b.Property<string>("Month")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal?>("TaxAmt")
                        .HasColumnType("numeric(38, 2)");

                    b.ToTable((string)null);

                    b.ToView("vw_taxbase_Computation_Final", (string)null);
                });

            modelBuilder.Entity("SelfPortalAPi.Models.VwTestKaushikView", b =>
                {
                    b.Property<int?>("AssessmentItemId")
                        .HasColumnType("int")
                        .HasColumnName("AssessmentItemID");

                    b.Property<string>("AssessmentItems")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("AssessmentRule")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("AssessmentRuleId")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("AssessmentRuleID");

                    b.Property<string>("Asset")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<int>("AssetTypeId")
                        .HasColumnType("int")
                        .HasColumnName("AssetTypeID");

                    b.Property<long>("BusinessId")
                        .HasColumnType("bigint")
                        .HasColumnName("BusinessID");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint")
                        .HasColumnName("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Expr1")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("SubmissionNotes")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("TaxBaseAmount")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("TaxMonth")
                        .HasColumnType("int");

                    b.Property<string>("TaxPayer")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<long>("TaxPayerId")
                        .HasColumnType("bigint")
                        .HasColumnName("TaxPayerID");

                    b.Property<int>("TaxPayerTypeId")
                        .HasColumnType("int")
                        .HasColumnName("TaxPayerTypeID");

                    b.Property<int?>("TaxYear")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vw_test_kaushik_view", "spike");
                });

            modelBuilder.Entity("SelfPortalAPi.Models.Ward", b =>
                {
                    b.Property<int>("Lga")
                        .HasColumnType("int")
                        .HasColumnName("lga");

                    b.Property<string>("WardStatus")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)")
                        .HasColumnName("ward_status");

                    b.Property<string>("Wards")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("wards");

                    b.Property<DateTime>("WardsCreateAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("wards_create_at")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("WardsCreateBy")
                        .HasColumnType("int")
                        .HasColumnName("wards_create_by");

                    b.Property<int>("WardsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("wards_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WardsId"));

                    b.ToTable("Wards");
                });
#pragma warning restore 612, 618
        }
    }
}
